//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FriendlyForms.Recurring {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.tpisoft.com/Admin/ws", ConfigurationName="Recurring.RecurringSoap")]
    public interface RecurringSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/AddRecurringCreditCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult AddRecurringCreditCard(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CcAccountNum, 
                    string CcExpDate, 
                    string CcNameOnCard, 
                    string CcStreet, 
                    string CcZip, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/AddRecurringCreditCard", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> AddRecurringCreditCardAsync(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CcAccountNum, 
                    string CcExpDate, 
                    string CcNameOnCard, 
                    string CcStreet, 
                    string CcZip, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/AddRecurringCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult AddRecurringCheck(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/AddRecurringCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> AddRecurringCheckAsync(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ProcessCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult ProcessCheck(string Username, string Password, string Vendor, string CheckInfoKey, string Amount, string InvNum, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ProcessCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ProcessCheckAsync(string Username, string Password, string Vendor, string CheckInfoKey, string Amount, string InvNum, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ProcessCreditCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult ProcessCreditCard(string Username, string Password, string Vendor, string CcInfoKey, string Amount, string InvNum, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ProcessCreditCard", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ProcessCreditCardAsync(string Username, string Password, string Vendor, string CcInfoKey, string Amount, string InvNum, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageCheckInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult ManageCheckInfo(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CheckInfoKey, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string RawMICR, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string Email, 
                    string DayPhone, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageCheckInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageCheckInfoAsync(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CheckInfoKey, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string RawMICR, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string Email, 
                    string DayPhone, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageCreditCardInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult ManageCreditCardInfo(string Username, string Password, string TransType, string Vendor, string CustomerKey, string CardInfoKey, string CcAccountNum, string CcExpDate, string CcNameOnCard, string CcStreet, string CcZip, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageCreditCardInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageCreditCardInfoAsync(string Username, string Password, string TransType, string Vendor, string CustomerKey, string CardInfoKey, string CcAccountNum, string CcExpDate, string CcNameOnCard, string CcStreet, string CcZip, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageContractAddDaysToNextBillDt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult ManageContractAddDaysToNextBillDt(string Username, string Password, string Vendor, string CustomerKey, string ContractKey, string NumOfDays, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageContractAddDaysToNextBillDt", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageContractAddDaysToNextBillDtAsync(string Username, string Password, string Vendor, string CustomerKey, string ContractKey, string NumOfDays, string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageContract", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult ManageContract(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string ContractKey, 
                    string PaymentInfoKey, 
                    string PaymentType, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string NextBillDt, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string Status, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageContract", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageContractAsync(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string ContractKey, 
                    string PaymentInfoKey, 
                    string PaymentType, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string NextBillDt, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string Status, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FriendlyForms.Recurring.RecurringResult ManageCustomer(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string Status, 
                    string ExtData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.tpisoft.com/Admin/ws/ManageCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageCustomerAsync(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string Status, 
                    string ExtData);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tpisoft.com/Admin/ws")]
    public partial class RecurringResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string customerKeyField;
        
        private string contractKeyField;
        
        private string ccInfoKeyField;
        
        private string checkInfoKeyField;
        
        private ResultCode codeField;
        
        private string errorField;
        
        private string partnerField;
        
        private string vendorField;
        
        private string usernameField;
        
        private string resultField;
        
        private string authCodeField;
        
        private string pNRefField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CustomerKey {
            get {
                return this.customerKeyField;
            }
            set {
                this.customerKeyField = value;
                this.RaisePropertyChanged("CustomerKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ContractKey {
            get {
                return this.contractKeyField;
            }
            set {
                this.contractKeyField = value;
                this.RaisePropertyChanged("ContractKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CcInfoKey {
            get {
                return this.ccInfoKeyField;
            }
            set {
                this.ccInfoKeyField = value;
                this.RaisePropertyChanged("CcInfoKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CheckInfoKey {
            get {
                return this.checkInfoKeyField;
            }
            set {
                this.checkInfoKeyField = value;
                this.RaisePropertyChanged("CheckInfoKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public ResultCode code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("error");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Partner {
            get {
                return this.partnerField;
            }
            set {
                this.partnerField = value;
                this.RaisePropertyChanged("Partner");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Vendor {
            get {
                return this.vendorField;
            }
            set {
                this.vendorField = value;
                this.RaisePropertyChanged("Vendor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string AuthCode {
            get {
                return this.authCodeField;
            }
            set {
                this.authCodeField = value;
                this.RaisePropertyChanged("AuthCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string PNRef {
            get {
                return this.pNRefField;
            }
            set {
                this.pNRefField = value;
                this.RaisePropertyChanged("PNRef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.tpisoft.com/Admin/ws")]
    public enum ResultCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Unknown_Error,
        
        /// <remarks/>
        Access_Denied,
        
        /// <remarks/>
        Invalid_Login,
        
        /// <remarks/>
        Invalid_User_Status,
        
        /// <remarks/>
        Invalid_User,
        
        /// <remarks/>
        User_Not_Found,
        
        /// <remarks/>
        Username_Already_In_Use,
        
        /// <remarks/>
        Username_Has_Invalid_Characters,
        
        /// <remarks/>
        Not_Enough_Privilege,
        
        /// <remarks/>
        Invalid_PartnerID,
        
        /// <remarks/>
        Invalid_VendorID,
        
        /// <remarks/>
        Invalid_Argument,
        
        /// <remarks/>
        Invalid_Record,
        
        /// <remarks/>
        Transaction_Type_Not_Supported_By_Host,
        
        /// <remarks/>
        Internal_Error,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RecurringSoapChannel : FriendlyForms.Recurring.RecurringSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecurringSoapClient : System.ServiceModel.ClientBase<FriendlyForms.Recurring.RecurringSoap>, FriendlyForms.Recurring.RecurringSoap {
        
        public RecurringSoapClient() {
        }
        
        public RecurringSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecurringSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecurringSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecurringSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FriendlyForms.Recurring.RecurringResult AddRecurringCreditCard(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CcAccountNum, 
                    string CcExpDate, 
                    string CcNameOnCard, 
                    string CcStreet, 
                    string CcZip, 
                    string ExtData) {
            return base.Channel.AddRecurringCreditCard(Username, Password, Vendor, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, Zip, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, ContractID, ContractName, BillAmt, TaxAmt, TotalAmt, StartDate, EndDate, BillingPeriod, BillingInterval, MaxFailures, FailureInterval, EmailCustomer, EmailMerchant, EmailCustomerFailure, EmailMerchantFailure, CcAccountNum, CcExpDate, CcNameOnCard, CcStreet, CcZip, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> AddRecurringCreditCardAsync(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CcAccountNum, 
                    string CcExpDate, 
                    string CcNameOnCard, 
                    string CcStreet, 
                    string CcZip, 
                    string ExtData) {
            return base.Channel.AddRecurringCreditCardAsync(Username, Password, Vendor, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, Zip, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, ContractID, ContractName, BillAmt, TaxAmt, TotalAmt, StartDate, EndDate, BillingPeriod, BillingInterval, MaxFailures, FailureInterval, EmailCustomer, EmailMerchant, EmailCustomerFailure, EmailMerchantFailure, CcAccountNum, CcExpDate, CcNameOnCard, CcStreet, CcZip, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult AddRecurringCheck(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string ExtData) {
            return base.Channel.AddRecurringCheck(Username, Password, Vendor, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, PostalCode, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, ContractID, ContractName, BillAmt, TaxAmt, TotalAmt, StartDate, EndDate, BillingPeriod, BillingInterval, MaxFailures, FailureInterval, EmailCustomer, EmailMerchant, EmailCustomerFailure, EmailMerchantFailure, CheckType, AccountType, CheckNum, MICR, AccountNum, TransitNum, SS, DOB, BranchCity, DL, StateCode, NameOnCheck, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> AddRecurringCheckAsync(
                    string Username, 
                    string Password, 
                    string Vendor, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string ExtData) {
            return base.Channel.AddRecurringCheckAsync(Username, Password, Vendor, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, PostalCode, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, ContractID, ContractName, BillAmt, TaxAmt, TotalAmt, StartDate, EndDate, BillingPeriod, BillingInterval, MaxFailures, FailureInterval, EmailCustomer, EmailMerchant, EmailCustomerFailure, EmailMerchantFailure, CheckType, AccountType, CheckNum, MICR, AccountNum, TransitNum, SS, DOB, BranchCity, DL, StateCode, NameOnCheck, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult ProcessCheck(string Username, string Password, string Vendor, string CheckInfoKey, string Amount, string InvNum, string ExtData) {
            return base.Channel.ProcessCheck(Username, Password, Vendor, CheckInfoKey, Amount, InvNum, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ProcessCheckAsync(string Username, string Password, string Vendor, string CheckInfoKey, string Amount, string InvNum, string ExtData) {
            return base.Channel.ProcessCheckAsync(Username, Password, Vendor, CheckInfoKey, Amount, InvNum, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult ProcessCreditCard(string Username, string Password, string Vendor, string CcInfoKey, string Amount, string InvNum, string ExtData) {
            return base.Channel.ProcessCreditCard(Username, Password, Vendor, CcInfoKey, Amount, InvNum, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ProcessCreditCardAsync(string Username, string Password, string Vendor, string CcInfoKey, string Amount, string InvNum, string ExtData) {
            return base.Channel.ProcessCreditCardAsync(Username, Password, Vendor, CcInfoKey, Amount, InvNum, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult ManageCheckInfo(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CheckInfoKey, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string RawMICR, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string Email, 
                    string DayPhone, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string ExtData) {
            return base.Channel.ManageCheckInfo(Username, Password, TransType, Vendor, CustomerKey, CheckInfoKey, CheckType, AccountType, CheckNum, MICR, AccountNum, TransitNum, RawMICR, SS, DOB, BranchCity, DL, StateCode, NameOnCheck, Email, DayPhone, Street1, Street2, Street3, City, StateID, Province, PostalCode, CountryID, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageCheckInfoAsync(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CheckInfoKey, 
                    string CheckType, 
                    string AccountType, 
                    string CheckNum, 
                    string MICR, 
                    string AccountNum, 
                    string TransitNum, 
                    string RawMICR, 
                    string SS, 
                    string DOB, 
                    string BranchCity, 
                    string DL, 
                    string StateCode, 
                    string NameOnCheck, 
                    string Email, 
                    string DayPhone, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string PostalCode, 
                    string CountryID, 
                    string ExtData) {
            return base.Channel.ManageCheckInfoAsync(Username, Password, TransType, Vendor, CustomerKey, CheckInfoKey, CheckType, AccountType, CheckNum, MICR, AccountNum, TransitNum, RawMICR, SS, DOB, BranchCity, DL, StateCode, NameOnCheck, Email, DayPhone, Street1, Street2, Street3, City, StateID, Province, PostalCode, CountryID, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult ManageCreditCardInfo(string Username, string Password, string TransType, string Vendor, string CustomerKey, string CardInfoKey, string CcAccountNum, string CcExpDate, string CcNameOnCard, string CcStreet, string CcZip, string ExtData) {
            return base.Channel.ManageCreditCardInfo(Username, Password, TransType, Vendor, CustomerKey, CardInfoKey, CcAccountNum, CcExpDate, CcNameOnCard, CcStreet, CcZip, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageCreditCardInfoAsync(string Username, string Password, string TransType, string Vendor, string CustomerKey, string CardInfoKey, string CcAccountNum, string CcExpDate, string CcNameOnCard, string CcStreet, string CcZip, string ExtData) {
            return base.Channel.ManageCreditCardInfoAsync(Username, Password, TransType, Vendor, CustomerKey, CardInfoKey, CcAccountNum, CcExpDate, CcNameOnCard, CcStreet, CcZip, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult ManageContractAddDaysToNextBillDt(string Username, string Password, string Vendor, string CustomerKey, string ContractKey, string NumOfDays, string ExtData) {
            return base.Channel.ManageContractAddDaysToNextBillDt(Username, Password, Vendor, CustomerKey, ContractKey, NumOfDays, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageContractAddDaysToNextBillDtAsync(string Username, string Password, string Vendor, string CustomerKey, string ContractKey, string NumOfDays, string ExtData) {
            return base.Channel.ManageContractAddDaysToNextBillDtAsync(Username, Password, Vendor, CustomerKey, ContractKey, NumOfDays, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult ManageContract(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string ContractKey, 
                    string PaymentInfoKey, 
                    string PaymentType, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string NextBillDt, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string Status, 
                    string ExtData) {
            return base.Channel.ManageContract(Username, Password, TransType, Vendor, CustomerKey, ContractKey, PaymentInfoKey, PaymentType, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, Zip, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, ContractID, ContractName, BillAmt, TaxAmt, TotalAmt, StartDate, EndDate, NextBillDt, BillingPeriod, BillingInterval, MaxFailures, FailureInterval, EmailCustomer, EmailMerchant, EmailCustomerFailure, EmailMerchantFailure, Status, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageContractAsync(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string ContractKey, 
                    string PaymentInfoKey, 
                    string PaymentType, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string ContractID, 
                    string ContractName, 
                    string BillAmt, 
                    string TaxAmt, 
                    string TotalAmt, 
                    string StartDate, 
                    string EndDate, 
                    string NextBillDt, 
                    string BillingPeriod, 
                    string BillingInterval, 
                    string MaxFailures, 
                    string FailureInterval, 
                    string EmailCustomer, 
                    string EmailMerchant, 
                    string EmailCustomerFailure, 
                    string EmailMerchantFailure, 
                    string Status, 
                    string ExtData) {
            return base.Channel.ManageContractAsync(Username, Password, TransType, Vendor, CustomerKey, ContractKey, PaymentInfoKey, PaymentType, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, Zip, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, ContractID, ContractName, BillAmt, TaxAmt, TotalAmt, StartDate, EndDate, NextBillDt, BillingPeriod, BillingInterval, MaxFailures, FailureInterval, EmailCustomer, EmailMerchant, EmailCustomerFailure, EmailMerchantFailure, Status, ExtData);
        }
        
        public FriendlyForms.Recurring.RecurringResult ManageCustomer(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string Status, 
                    string ExtData) {
            return base.Channel.ManageCustomer(Username, Password, TransType, Vendor, CustomerKey, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, Zip, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, Status, ExtData);
        }
        
        public System.Threading.Tasks.Task<FriendlyForms.Recurring.RecurringResult> ManageCustomerAsync(
                    string Username, 
                    string Password, 
                    string TransType, 
                    string Vendor, 
                    string CustomerKey, 
                    string CustomerID, 
                    string CustomerName, 
                    string FirstName, 
                    string LastName, 
                    string Title, 
                    string Department, 
                    string Street1, 
                    string Street2, 
                    string Street3, 
                    string City, 
                    string StateID, 
                    string Province, 
                    string Zip, 
                    string CountryID, 
                    string Email, 
                    string DayPhone, 
                    string NightPhone, 
                    string Fax, 
                    string Mobile, 
                    string Status, 
                    string ExtData) {
            return base.Channel.ManageCustomerAsync(Username, Password, TransType, Vendor, CustomerKey, CustomerID, CustomerName, FirstName, LastName, Title, Department, Street1, Street2, Street3, City, StateID, Province, Zip, CountryID, Email, DayPhone, NightPhone, Fax, Mobile, Status, ExtData);
        }
    }
}
