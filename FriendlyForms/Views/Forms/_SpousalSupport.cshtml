@using Models.ViewModels
@model SpousalViewModel
<div class="form-vertical wrapper hide" id="spousalWrapper">
    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "spousal" }))
    {
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-signal"></i></span>
                        <h5>Spousal Support</h5>
                    </div>
                    <div class="widget-content">
            <div class="control-group">
                <label class="informative">
                    What are the provisions for spousal support?</label>
                <label class="radio">There will be no spousal support in this case @Html.RadioButtonFor(m => m.Spousal, (int)YesNo.No)</label>
                <label class="radio">Provisions for spousal support will occur as follows @Html.RadioButtonFor(m => m.Spousal, (int)YesNo.Yes)</label>
                @Html.ValidationMessageFor(m => m.Spousal)
            </div>
            @if (Model.Spousal==((int)YesNo.Yes))
            {
                <div class="control-group spousal-detail">
                    @Html.TextAreaFor(m => m.SpousalDescription, new { placeholder = "Details", @class="input-xxlarge" })
                    @Html.ValidationMessageFor(m => m.SpousalDescription)
                </div>                        
            }
            else
            {
                <div class="control-group spousal-detail hide">
                    @Html.TextAreaFor(m => m.SpousalDescription, new { placeholder = "Details", @class="input-xxlarge" })
                    @Html.ValidationMessageFor(m => m.SpousalDescription)
                </div>        
            }
                    </div>
                </div>
            </div>
        </div>
    }
    <button class="btn btn-primary domestic-part7 next">Continue <i class="icon-arrow-right icon-white"></i></button>
</div>
