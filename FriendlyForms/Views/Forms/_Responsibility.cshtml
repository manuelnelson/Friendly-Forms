@using BusinessLogic.Models
@using Models.ViewModels
@model ResponsibilityViewModel
<div class="form-vertical wrapper hide" id="responsibilityWrapper">
    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "responsibility" }))
    {
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-signal"></i></span>
                        <h5>Exchange of Children</h5>
                    </div>
                    <div class="widget-content">

                        <label class="informative">
                            In this section you will define some of the responsibilities of single parenting.</label>
                        <div class="control-group">
                            <label>
                                Who will be responsible to pick up or drop off the child at the beginning of visitation?</label>
                            <label class="radio inline">Father @Html.RadioButtonFor(m => m.BeginningVisitation, (int)DecisionMaker.Father, new { @class = "inline" })</label>
                            <label class="radio inline">Mother @Html.RadioButtonFor(m => m.BeginningVisitation, (int)DecisionMaker.Mother, new { @class = "inline" })</label>
                            @Html.ValidationMessageFor(m => m.BeginningVisitation)
                        </div>
                        <div class="control-group">
                            <label>
                                Who will be responsible to pick up or drop off the child at the end of visitation?</label>
                            <label class="radio inline">Father @Html.RadioButtonFor(m => m.EndVisitation, (int)DecisionMaker.Father, new { @class = "inline" })</label>
                            <label class="radio inline">Mother @Html.RadioButtonFor(m => m.EndVisitation, (int)DecisionMaker.Mother, new { @class = "inline" })</label>
                            @Html.ValidationMessageFor(m => m.EndVisitation)
                        </div>
                        <div class="control-group">
                            <label>
                                Will each of you pay your own portion of the costs to pick up or drop off the child, or will each of you be responsible to pay a percentage of the costs of transportation?</label>
                            <label class="radio ">Each parent will pay their own expenses @Html.RadioButtonFor(m => m.TransportationCosts, (int)TransportationCost.Own)</label>
                            <label class="radio">Each parent will pay half of the expenses @Html.RadioButtonFor(m => m.TransportationCosts, (int)TransportationCost.Half)</label>
                            <label class="radio">Each parent will pay a percentage @Html.RadioButtonFor(m => m.TransportationCosts, (int)TransportationCost.Percentage)</label>
                            <label class="radio">Other @Html.RadioButtonFor(m => m.TransportationCosts, (int)TransportationCost.Other)</label>
                            @Html.ValidationMessageFor(m => m.TransportationCosts)
                        </div>
                        @switch (Model.TransportationCosts)
                        {
                            case 3:
                            <div class="control-group responsibility-percentage">
                                <label>
                                    Father's percentage</label>
                                @Html.TextBoxFor(m => m.FatherPercentage, new { placeholder = "%", @class = "input-mini" })
                                @Html.ValidationMessageFor(m => m.FatherPercentage)
                            </div>
                            <div class="control-group responsibility-percentage">
                                <label>
                                    Mother's percentage</label>
                                @Html.TextBoxFor(m => m.MotherPercentage, new { placeholder = "%", @class = "input-mini" })
                                @Html.ValidationMessageFor(m => m.MotherPercentage)
                            </div>
                            <div class="control-group responsibility-cost hide">
                                <label>
                                    The parties agree that visitation-related expenses will be paid as follows:</label>
                                @Html.TextAreaFor(m => m.OtherDetails, new { placeholder = "Description", @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.OtherDetails)
                            </div>
                                break;
                            case 4:
                            <div class="control-group responsibility-percentage hide">
                                <label>
                                    Father's percentage</label>
                                @Html.TextBoxFor(m => m.FatherPercentage, new { placeholder = "%", @class = "input-mini" })
                                @Html.ValidationMessageFor(m => m.FatherPercentage)
                            </div>
                            <div class="control-group responsibility-percentage hide">
                                <label>
                                    Mother's percentage</label>
                                @Html.TextBoxFor(m => m.MotherPercentage, new { placeholder = "%", @class = "input-mini" })
                                @Html.ValidationMessageFor(m => m.MotherPercentage)
                            </div>
                            <div class="control-group responsibility-cost">
                                <label>
                                    The parties agree that visitation-related expenses will be paid as follows:</label>
                                @Html.TextAreaFor(m => m.OtherDetails, new { placeholder = "Description", @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.OtherDetails)
                            </div>
                                break;
                            default:
                            <div class="control-group responsibility-percentage hide">
                                <label>
                                    Father's percentage</label>
                                @Html.TextBoxFor(m => m.FatherPercentage, new { placeholder = "%", @class = "input-mini" })
                                @Html.ValidationMessageFor(m => m.FatherPercentage)
                            </div>
                            <div class="control-group responsibility-percentage hide">
                                <label>
                                    Mother's percentage</label>
                                @Html.TextBoxFor(m => m.MotherPercentage, new { placeholder = "%", @class = "input-mini" })
                                @Html.ValidationMessageFor(m => m.MotherPercentage)
                            </div>
                            <div class="control-group responsibility-cost hide">
                                <label>
                                    The parties agree that visitation-related expenses will be paid as follows:</label>
                                @Html.TextAreaFor(m => m.OtherDetails, new { placeholder = "Description", @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.OtherDetails)
                            </div>
                                break;

                        }
                    </div>
                </div>
            </div>
        </div>

    }
    <button class="btn btn-primary child-part7 previous" value="Continue"><i class="icon-arrow-left icon-white"></i>Previous</button>
    <button class="btn btn-primary child-part7 next" value="Continue">Continue <i class="icon-arrow-right icon-white"></i></button>
</div>
