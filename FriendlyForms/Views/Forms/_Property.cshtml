@using Models.ViewModels
@model RealEstateViewModel
<div class="form-vertical wrapper hide" id="propertyWrapper">
    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "property" }))
    {
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-signal"></i></span>
                        <h5>Real Estate and Property</h5>
                    </div>
                    <div class="widget-content">
            <div class="control-group">
                <label class="informative">
                    Is there any other real estate at issue in this case?</label>
                <label class="radio inline">Yes @Html.RadioButtonFor(m => m.RealEstate, (int)YesNo.Yes, new { @class = "inline" })</label>
                <label class="radio inline">No @Html.RadioButtonFor(m => m.RealEstate, (int)YesNo.No, new { @class = "inline" })</label>
                @Html.ValidationMessageFor(m => m.RealEstate)
            </div>
            @if (Model.RealEstate.Equals((int)YesNo.Yes))
            {
                <div class="control-group real-estate-details">
                    <label class="informative">Provide details of additional property and how it will be divided.</label>
                    @Html.TextAreaFor(m => m.RealEstateDescription, new { placeholder = "Details", @class="input-xxlarge" })
                    @Html.ValidationMessageFor(m => m.RealEstateDescription)
                </div>                
            }
            else
            {
                <div class="control-group real-estate-details hide">
                    <label class="informative">Provide details of additional property and how it will be divided.</label>
                    @Html.TextAreaFor(m => m.RealEstateDescription, new { placeholder = "Details", @class="input-xxlarge" })
                    @Html.ValidationMessageFor(m => m.RealEstateDescription)
                </div>                
            }
            <div class="control-group">
                <label class="informative">
                    Division of the parties' household furnishings and personal property has been or will be decided in one of three ways:</label>
                <label class="radio">Has already been divided to the satisfaction of both parties @Html.RadioButtonFor(m => m.PersonalProperty, (int)PersonalProperty.AlreadyDivided)</label>
                <label class="radio">Will be determined by the court  @Html.RadioButtonFor(m => m.PersonalProperty, (int)PersonalProperty.Court)</label>
                <label class="radio">Will be divided in the following manner: @Html.RadioButtonFor(m => m.PersonalProperty, (int)PersonalProperty.Other)</label>
                @Html.ValidationMessageFor(m => m.PersonalProperty)
            </div>
            @if (Model.RealEstate.Equals((int)YesNo.Yes))
            {
                <div class="control-group property-details">
                    @Html.TextAreaFor(m => m.DividingProperty, new { placeholder = "Details",@class="input-xxlarge" })
                    @Html.ValidationMessageFor(m => m.DividingProperty)
                </div>   
            }
            else
            {
                <div class="control-group property-details hide">
                    @Html.TextAreaFor(m => m.DividingProperty, new { placeholder = "Details",@class="input-xxlarge"  })
                    @Html.ValidationMessageFor(m => m.DividingProperty)
                </div>                
            }
                    </div>
                </div>
            </div>
        </div>
    }
    <button class="btn btn-primary domestic-part2 previous"><i class="icon-arrow-left icon-white"></i>Previous</button>
    <button class="btn btn-primary domestic-part2 next">Continue <i class="icon-arrow-right icon-white"></i></button>
</div>
