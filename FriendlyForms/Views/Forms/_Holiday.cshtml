@using BusinessLogic.Models
@using Models.ViewModels
@model AllHolidaysViewModel
<div class="form-vertical wrapper hide" id="holidayWrapper">
    <div class="row-fluid">
        <div class="span12">
            <div class="widget-box">
                <div class="widget-title">
                    <span class="icon"><i class="icon-signal"></i></span>
                    <h5>Holidays</h5>
                    <div class="btn dropdown pull-right copy-button" id="copy-holidays">
                        <a href="#" style="display: block;" data-target="#copy-holidays" class="dropdown-toggle" class="btn btn-mini">Copy To<i class="icon-share"></i></a>
                        <ul class="dropdown-menu pull-right">
                            <li><a title="all" data-id="0" href="#">All</a></li>
                        </ul>
                    </div>
                </div>
                <div class="widget-content">
                    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "holiday" }))
                    {
                        <label class="informative">
                            In this section, you will define scheduling holidays with your child(ren).</label>
                        <input type="hidden" id="holidayChildId" /><br />
                        <h4 id="holidayChildName"></h4>
                        <h5>Thanksgiving Break</h5>
                        <div class="control-group">
                            <label class="informative">
                                How would you like to manage Thanksgiving break? From the time school is dismissed on the last day prior to the holiday until:</label>
                            <label class="radio">The day before returning to school.  @Html.RadioButtonFor(m => m.HolidayViewModel.Thanksgiving, (int)Thanksgiving.Before)</label>
                            <label class="radio">The first day of school after the holiday.  @Html.RadioButtonFor(m => m.HolidayViewModel.Thanksgiving, (int)Thanksgiving.After)</label>
                            <label class="radio">Other @Html.RadioButtonFor(m => m.HolidayViewModel.Thanksgiving, (int)Thanksgiving.Other)</label>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.Thanksgiving)
                        </div>
                        if (Model.HolidayViewModel.Thanksgiving.Equals((int)Thanksgiving.Other))
                        {
                            <div class="control-group thanksgiving-other">
                                <label class="informative">
                                    Input your holiday schedule</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.ThanksgivingOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.Thanksgiving)
                            </div>                
                        }
                        else
                        {
                            <div class="control-group thanksgiving-other hide">
                                <label class="informative">
                                    Input your holiday schedule</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.ThanksgivingOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.Thanksgiving)
                            </div>                                
                        }
                        <div class="control-group">
                            <label class="informative">
                                At the time of</label>
                            @Html.TextBoxFor(m => m.HolidayViewModel.ThanksgivingTime, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                            <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.ThanksgivingTime)
                        </div>                
                        <h5>Winter Break</h5>
                        <div class="control-group">
                            <label class="informative">
                                How would you like to manage Winter Break? From the time school is dismissed on the last day prior to the holiday</label>
                            <label class="radio">Until returning to school after Winter Break @Html.RadioButtonFor(m => m.HolidayViewModel.Christmas, (int)Christmas.AfterBreak)</label>
                            <label class="radio">On Christmas Eve  @Html.RadioButtonFor(m => m.HolidayViewModel.Christmas, (int)Christmas.Eve)</label>
                            <label class="radio">On Christmas Day @Html.RadioButtonFor(m => m.HolidayViewModel.Christmas, (int)Christmas.Day)</label>
                            <label class="radio">On the day after Christmas  @Html.RadioButtonFor(m => m.HolidayViewModel.Christmas, (int)Christmas.AfterDay)</label>
                            <label class="radio">Other @Html.RadioButtonFor(m => m.HolidayViewModel.Christmas, (int)Christmas.Other)</label>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.Christmas)
                        </div>
                        if (Model.HolidayViewModel.Christmas.Equals((int)Christmas.Eve) || Model.HolidayViewModel.Christmas.Equals((int)Christmas.Day) || Model.HolidayViewModel.Christmas.Equals((int)Christmas.AfterDay))
                        {
                            <div class="control-group christmas-items">
                                <label class="informative">
                                    At the time of</label>
                                @Html.TextBoxFor(m => m.HolidayViewModel.ChristmasTime, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                                <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChristmasTime)
                            </div>                
                        }
                        else
                        {
                            <div class="control-group christmas-items hide">
                                <label class="informative">
                                    At the time of</label>
                                @Html.TextBoxFor(m => m.HolidayViewModel.ChristmasTime, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                                <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChristmasTime)
                            </div>                
                        }
                        if (Model.HolidayViewModel.Christmas.Equals((int)Christmas.Other))
                        {
                            <div class="control-group christmas-other">
                                <label class="informative">
                                    Define Winter Break time</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.ChristmasOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChristmasOther)
                            </div>                
                        }
                        else
                        {
                            <div class="control-group christmas-other hide">
                                <label class="informative">
                                    Define Winter Break time</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.ChristmasOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChristmasOther)
                            </div>                
                        }
                        <h5>Spring Break</h5>
                        <div class="control-group">
                            <label class="informative">
                                How would you like to manage the start of spring break?  From the time school is dismissed on the last day prior to the break until:</label>
                            <label class="radio">School begins at the conclusion of spring break @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreak, (int)YesNo.Yes)</label>
                            <label class="radio">Other @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreak, (int)YesNo.No)</label>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.SpringBreak)
                        </div>
                        if (Model.HolidayViewModel.SpringBreak.Equals((int)YesNo.No))
                        {
                            <div class="control-group spring-other">
                                <label class="informative">
                                    Define spring break time</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.SpringOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.SpringOther)
                            </div>                
                        }
                        else
                        {
                            <div class="control-group spring-other hide">
                                <label class="informative">
                                    Define spring break time</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.SpringOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.SpringOther)
                            </div>                
                        }
                        <div class="control-group">
                            <label class="informative">
                                At the time of</label>
                            @Html.TextBoxFor(m => m.HolidayViewModel.SpringBreakTime, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                            <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.SpringBreakTime)
                        </div>                
                        <h5>Summer Break</h5>
                        <div class="control-group">
                            Summer vacation begins @Html.TextBoxFor(m => m.HolidayViewModel.SummerBeginDays, new { @class = "input-mini inline", placeholder = "#" }) days after the last day of school at @Html.TextBoxFor(m => m.HolidayViewModel.SummerBeginTime, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small inline" })
                            <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.SummerBeginDays)
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.SummerBeginTime)
                        </div>
                        <div class="control-group">
                            Summer vacation ends  @Html.TextBoxFor(m => m.HolidayViewModel.SummerEndDays, new { @class = "input-mini inline", placeholder = "#" }) days prior to the first day of school at @Html.TextBoxFor(m => m.HolidayViewModel.SummerEndTime, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small inline" })
                            <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.SummerEndDays)
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.SummerEndTime)
                        </div>
                        <div class="control-group summer-other">
                            <label class="informative">
                                How will each of you spend time with the child(ren) during summer vacation.</label>
                            @Html.TextAreaFor(m => m.HolidayViewModel.SummerDetails, new { @class = "input-xxlarge" })
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.SummerDetails)
                        </div>
                        <h5>Fall Break</h5>
                        <div class="control-group">
                            <label class="informative">
                                How would you like to manage the start of fall break?  From the time school is dismissed on the last day prior to the break until:</label>
                            <label class="radio">School begins at the conclusion of fall break @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreak, (int)YesNo.Yes)</label>
                            <label class="radio">Other @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreak, (int)YesNo.No)</label>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.FallBreak)
                        </div>
                        if (Model.HolidayViewModel.FallBreak.Equals((int)YesNo.No))
                        {
                            <div class="control-group fall-other">
                                <label class="informative">
                                    Define fall break time</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.FallOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FallOther)
                            </div>                
                        }
                        else
                        {
                            <div class="control-group fall-other hide">
                                <label class="informative">
                                    Define fall break time</label>
                                @Html.TextAreaFor(m => m.HolidayViewModel.FallOther, new { @class = "input-xxlarge" })
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FallOther)
                            </div>                
                        }
                        <div class="control-group">
                            <label class="informative">
                                At the time of</label>
                            @Html.TextBoxFor(m => m.HolidayViewModel.FallBreakTime, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                            <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.FallBreakTime)
                        </div>    
                        <h4>Other Holidays</h4>
                        <div class="control-group">
                            <label class="informative">
                                When a holiday falls on Friday or Monday, should the holiday visitation include the weekend immediately before or after that holiday?</label>
                            <label class="checkbox">Include the following Saturday and Sunday when holiday falls on Friday @Html.CheckBoxFor(m => m.HolidayViewModel.FridayHoliday)</label>
                            <label class="checkbox">Include the preceding Saturday and Sunday when holiday falls on Monday @Html.CheckBoxFor(m => m.HolidayViewModel.MondayHoliday)</label>
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.FridayHoliday)
                            @Html.ValidationMessageFor(m => m.HolidayViewModel.MondayHoliday)
                        </div> 
                        <label class="informative">Many people define holiday parenting time as the children being with one parent during a holiday when it falls in even-numbered years, and the other parent during that same holiday when it falls in odd-numbered years. Others are able to see that it would be to everyone’s advantage for one parent to have the children on a specific holiday every year while some people do not want to specify the parenting time for a holiday.</label>
                        <div class="row-fluid">
                            <div class="span2">&nbsp;</div>
                            <div class="span5">Father</div>
                            <div class="span5">Mother</div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">All</div>
                            <div class="span5 father-all">
                                <label class="radio inline">
                                    Odd
                                    <input class="inline" id="allFather" name="allFather" type="radio" value="1"></label>
                                <label class="radio inline">
                                    Even
                                    <input class="inline" id="allFather" name="allFather" type="radio" value="2"></label>
                                <label class="radio inline">
                                    Every
                                    <input class="inline" id="allFather" name="allFather" type="radio" value="3"></label>
                                <label class="radio inline">
                                    Never
                                    <input class="inline" id="allFather" name="allFather" type="radio" value="4"></label>
                            </div>
                            <div class="span5 mother-all">
                                <label class="radio inline">
                                    Odd
                                    <input class="inline" id="allMother" name="allMother" type="radio" value="1"></label>
                                <label class="radio inline">
                                    Even
                                    <input class="inline" id="allMother" name="allMother" type="radio" value="2"></label>
                                <label class="radio inline">
                                    Every
                                    <input class="inline" id="allMother" name="allMother" type="radio" value="3"></label>
                                <label class="radio inline">
                                    Never
                                    <input class="inline" id="allMother" name="allMother" type="radio" value="4"></label>
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Christmas Break</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChristmasFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ChristmasMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChristmasMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">MLK Day</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MlkFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MlkFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MlkFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MlkFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MlkFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MlkMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MlkMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MlkMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MlkMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MlkMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">President's Day</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.PresidentsFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.PresidentsMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.PresidentsMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Spring Break</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.SpringBreakFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.SpringBreakMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.SpringBreakMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Mother's Day</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MothersFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MothersFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MothersFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MothersFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MothersFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MothersMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MothersMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MothersMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MothersMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MothersMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Memorial Day</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MemorialFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MemorialMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MemorialMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Father's Day</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.FathersFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.FathersFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.FathersFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.FathersFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FathersFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.FathersMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.FathersMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.FathersMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.FathersMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FathersMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Independance Day</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.IndependenceFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.IndependenceMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.IndependenceMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Labor Day</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.LaborFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.LaborFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.LaborFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.LaborFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.LaborFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.LaborMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.LaborMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.LaborMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.LaborMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.LaborMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Fall Break</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FallBreakFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.FallBreakMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FallBreakMother)
                            </div>
                        </div>                        
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Halloween</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.HalloweenFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.HalloweenMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.HalloweenMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Thanksgiving Break</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ThanksgivingFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ThanksgivingMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ThanksgivingMother)
                            </div>
                        </div>                                                
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Child(ren)'s Birthdays</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChildrensFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ChildrensMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ChildrensMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Father's Birthdays</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FathersBdayFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.FathersBdayMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.FathersBdayMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Mother's Birthdays</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MothersBdayFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.MothersBdayMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.MothersBdayMother)
                            </div>
                        </div>
                        <div class="control-group row-fluid holiday-parent">
                            <div class="span2">Religious Holidays</div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ReligiousFather)
                            </div>
                            <div class="span5">
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.HolidayViewModel.ReligiousMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.HolidayViewModel.ReligiousMother)
                            </div>
                        </div>
                        if (Model.ExtraHolidayViewModel.ExtraHolidays != null && Model.ExtraHolidayViewModel.ExtraHolidays.Any())
                        {
                            foreach (var holiday in Model.ExtraHolidayViewModel.ExtraHolidays)
                            {
                                var fatherName = "HolidayFather" + holiday.Id;
                                var motherName = "HolidayMother" + holiday.Id;
                                <div class="control-group row-fluid extra-holiday-item holiday-parent">
                                    <div class="span2 extra-holiday-name">@holiday.HolidayName</div>
                                    <div class="span5">
                                        @if (holiday.HolidayFather.Equals(1))
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input checked="checked" class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="4"></label>                
                                        }
                                        else if (holiday.HolidayFather.Equals(2))
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input checked="checked" class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="4"></label>                                        
                                        }
                                        else if (holiday.HolidayFather.Equals(3))
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input  class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input checked="checked" class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="4"></label>                                        
                                        }
                                        else
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input checked="checked" class="inline extra-holiday-father" data-val="true" data-val-number="The field must be a number." name="@fatherName" data-val-required="The field is required."  type="radio" value="4"></label>                                        
                                        }
                                        <span class="field-validation-valid" data-valmsg-for="@fatherName" data-valmsg-replace="true"></span>
                                        <input type="hidden" id="extra-holiday-childId" value="@holiday.ChildId" />
                                        <input type="hidden" id="extra-holiday-Id" value="@holiday.Id" />
                                    </div>
                                    <div class="span5">
                                        @if (holiday.HolidayMother.Equals(1))
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input checked="checked" class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="4"></label>                
                                        }
                                        else if (holiday.HolidayFather.Equals(2))
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input  class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input checked="checked" class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="4"></label>                
                                        }
                                        else if (holiday.HolidayFather.Equals(3))
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input  class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input checked="checked" class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="4"></label>                
                                        }
                                        else
                                        {
                                            <label class="radio inline">
                                                Odd
                                                <input  class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="1"></label>                
                                            <label class="radio inline">
                                                Even
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="2"></label>                
                                            <label class="radio inline">
                                                Every
                                                <input class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="3"></label>                
                                            <label class="radio inline">
                                                Never
                                                <input checked="checked" class="inline extra-holiday-mother" data-val="true" data-val-number="The field must be a number." name="@motherName" data-val-required="The field is required."  type="radio" value="4"></label>                
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <button class="btn btn-primary child-part10 previous" value="Previous"><i class="icon-arrow-left icon-white"></i>Previous</button>
    <button class="btn btn-primary child-part10 next" value="Continue">Continue <i class="icon-arrow-right icon-white"></i></button>

    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "extraHolidays" }))
    {
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-signal"></i></span>
                        <h5>Add additional holidays (Optional)</h5>
                    </div>
                    <div class="widget-content">
                        <div class="row-fluid holiday-parent">
                            <div class="control-group span2">
                                <label class="informative">
                                    Holiday Name</label>
                                @Html.TextBoxFor(m => m.ExtraHolidayViewModel.HolidayName, new { placeholder = "Holiday Name", @class = "span12" })
                                @Html.ValidationMessageFor(m => m.ExtraHolidayViewModel.HolidayName)
                            </div>
                            <div class="control-group span5">
                                <label class="informative">
                                    Father</label>
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayFather, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayFather, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayFather, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayFather, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.ExtraHolidayViewModel.HolidayFather)
                            </div>
                            <div class="control-group span5">
                                <label class="informative">
                                    Mother</label>
                                <label class="radio inline">Odd @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayMother, (int)HolidayYear.Odd, new { @class = "inline" })</label>
                                <label class="radio inline">Even @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayMother, (int)HolidayYear.Even, new { @class = "inline" })</label>
                                <label class="radio inline">Every @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayMother, (int)HolidayYear.Every, new { @class = "inline" })</label>
                                <label class="radio inline">Never @Html.RadioButtonFor(m => m.ExtraHolidayViewModel.HolidayMother, (int)HolidayYear.Never, new { @class = "inline" })</label>
                                @Html.ValidationMessageFor(m => m.ExtraHolidayViewModel.HolidayMother)
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <button class="btn btn-primary" id="addHolidays" value="Add">Add </button>
    @Html.Partial("_templateExtraHolidays")
</div>
