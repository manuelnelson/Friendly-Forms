@using Models.ViewModels
@model HouseViewModel
<div class="form-vertical wrapper" id="houseWrapper">
    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "house" }))
    {
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-signal"></i></span>
                        <h5>Marital House</h5>
                    </div>
                    <div class="widget-content">
            <div class="control-group">
                <label class="form-question">
                    Is there a marital house at issue in this case?</label>
                <label class="radio inline">Yes @Html.RadioButtonFor(m => m.MaritalHouse, (int)YesNo.Yes, new { @class = "inline" })</label>
                <label class="radio inline">No @Html.RadioButtonFor(m => m.MaritalHouse, (int)YesNo.No, new { @class = "inline" })</label>
                @Html.ValidationMessageFor(m => m.MaritalHouse)
            </div>
            @if (Model.MaritalHouse==((int)YesNo.Yes))
            {
                <div class="marital-house">
                    <div class="control-group">
                        <label class="form-question">House address</label>
                        @Html.TextBoxFor(m => m.Address, new { placeholder = "Address", @class = "marital-info" })
                        @Html.ValidationMessageFor(m => m.Address)
                    </div>
                    <div class="control-group">
                        <label class="form-question">City, State</label>
                        @Html.TextBoxFor(m => m.CityState, new { placeholder = "City State", @class = "marital-info", autocomplete="off" })
                        @Html.ValidationMessageFor(m => m.CityState)
                    </div>
                    <div class="control-group">
                        <label class="form-question">Zip Code</label>
                        @Html.TextBoxFor(m => m.ZipCode, new { placeholder = "Zip Code", @class = "marital-info" })
                        @Html.ValidationMessageFor(m => m.ZipCode)
                    </div>
                    <div class="control-group">
                        <label class="form-question">Retail value of the house</label>
                        @Html.TextBoxFor(m => m.RetailValue, new { placeholder = "Value in Dollars", @class = "marital-info currency" })
                        @Html.ValidationMessageFor(m => m.RetailValue)
                    </div>
                    <div class="control-group">
                        <label class="form-question">Amount of money still owed on the house</label>
                        @Html.TextBoxFor(m => m.MoneyOwed, new { placeholder = "Dollars owed", @class = "marital-info currency" })
                        @Html.ValidationMessageFor(m => m.MoneyOwed)
                    </div>
                    <div class="control-group">
                        <label class="form-question">After subtracting estimated real estate commissions and other sale related expenses, the equity in the property is approximately:</label>
                        @Html.TextBoxFor(m => m.Equity, new { placeholder = "Equity in Dollars", @class = "marital-info currency" })
                        @Html.ValidationMessageFor(m => m.Equity)
                    </div>
                    <div class="control-group">
                        <label class="form-question">The mortgage holder on the house</label>
                        @Html.TextBoxFor(m => m.MortgageOwner, new { placeholder = "Mortgage holder", @class = "marital-info" })
                        @Html.ValidationMessageFor(m => m.MortgageOwner)
                    </div>
                    <div class="control-group">
                        <label class="form-question">How will you divide the marital home?</label>
                        @Html.TextAreaFor(m => m.Divide, new { placeholder = "List items you consider to be personal property for consideration in your case. Items such as jewelry, artwork, recreational vehicles, etc are examples of personal property", @class = "marital-info input-xxlarge" })
                        @Html.ValidationMessageFor(m => m.Divide)
                    </div>                
                </div>                
            }
            else
            {
                <div class="hide marital-house">
                    <div class="control-group">
                        <label class="form-question">House address</label>
                        @Html.TextBoxFor(m => m.Address, new { placeholder = "Address", @class = "marital-info" })
                        @Html.ValidationMessageFor(m => m.Address)
                    </div>
                    <div class="control-group">
                        <label class="form-question">City, State</label>
                        @Html.TextBoxFor(m => m.CityState, new { placeholder = "City State", @class = "marital-info", autocomplete="off" })
                        @Html.ValidationMessageFor(m => m.CityState)
                    </div>
                    <div class="control-group">
                        <label class="form-question">Zip Code</label>
                        @Html.TextBoxFor(m => m.ZipCode, new { placeholder = "Zip Code", @class = "marital-info" })
                        @Html.ValidationMessageFor(m => m.ZipCode)
                    </div>

                    <div class="control-group">
                        <label class="form-question">Retail value of the house</label>
                        @Html.TextBoxFor(m => m.RetailValue, new { placeholder = "Value in Dollars", @class = "marital-info currency" })
                        @Html.ValidationMessageFor(m => m.RetailValue)
                    </div>
                    <div class="control-group">
                        <label class="form-question">Amount of money still owed on the house</label>
                        @Html.TextBoxFor(m => m.MoneyOwed, new { placeholder = "Dollars owed", @class = "marital-info currency" })
                        @Html.ValidationMessageFor(m => m.MoneyOwed)
                    </div>
                    <div class="control-group">
                        <label class="form-question">After subtracting estimated real estate commissions and other sale related expenses, the equity in the property is approximately:</label>
                        @Html.TextBoxFor(m => m.Equity, new { placeholder = "Equity in Dollars", @class = "marital-info currency" })
                        @Html.ValidationMessageFor(m => m.Equity)
                    </div>
                    <div class="control-group">
                        <label class="form-question">The mortgage holder on the house</label>
                        @Html.TextBoxFor(m => m.MortgageOwner, new { placeholder = "Mortgage holder", @class = "marital-info" })
                        @Html.ValidationMessageFor(m => m.MortgageOwner)
                    </div>
                    <div class="control-group">
                        <label class="form-question">How will you divide the marital home?</label>
                        @Html.TextAreaFor(m => m.Divide, new { placeholder = "List items you consider to be personal property for consideration in your case. Items such as jewelry, artwork, recreational vehicles, etc are examples of personal property", @class = "marital-info input-xxlarge" })
                        @Html.ValidationMessageFor(m => m.Divide)
                    </div>                
                </div>
            }
                    </div>
                </div>
            </div>
        </div>
    }
    <button class="btn btn-primary domestic-part1 next">Continue <i class="icon-arrow-right icon-white"></i></button>
</div>
