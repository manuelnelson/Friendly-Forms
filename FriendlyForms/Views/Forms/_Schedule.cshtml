@using Models.ViewModels
@model ScheduleViewModel
<div class="form-vertical wrapper hide" id="scheduleWrapper">
    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "schedule" }))
    {
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-signal"></i></span>
                        <h5>Schedule</h5>
                    </div>
                    <div class="widget-content">
                        <div class="control-group">
                            <label class="form-question">
                                On what date would you like the general parenting schedule to begin?</label>
                            <label class="radio">Date of Judge's Order @Html.RadioButtonFor(m => m.DetermineBeginDate, (int)DateDetermination.Judge)</label>
                            <label class="radio">Date of your choice @Html.RadioButtonFor(m => m.DetermineBeginDate, (int)DateDetermination.Parent)</label>
                            @Html.ValidationMessageFor(m => m.DetermineBeginDate)
                        </div>
                        @if (Model.DetermineBeginDate == ((int)DateDetermination.Parent))
                        {
                            <div class="control-group schedule-date ">
                                <label class="form-question">
                                    Parenting schedule begins on:</label>
                                @Html.TextBoxFor(m => m.BeginDate, new { placeholder = "MM/DD/YYYY", @class = "datepicker", data_date = @DateTime.Now.ToString("MM/dd/yyyy") })
                                @Html.ValidationMessageFor(m => m.BeginDate)
                            </div>                
                        }
                        else
                        {
                            <div class="control-group schedule-date hide">
                                <label class="form-question">
                                    Parenting schedule begins on:</label>
                                @Html.TextBoxFor(m => m.BeginDate, new { placeholder = "MM/DD/YYYY", @class = "datepicker", data_date = @DateTime.Now.ToString("MM/dd/yyyy") })
                                @Html.ValidationMessageFor(m => m.BeginDate)
                            </div>                
                        }
                        <label>
                            When would the <span class="nonCustodial">@Model.NonCustodialParent</span> like to have regular parenting time with the child(ren) on weekends?</label>
                        <div class="control-group">
                            <label class="form-question">
                                What day and time will the child(ren) be picked up on weekends?</label>
                            @{
                        var weekList = new Dictionary<string, string>
                        {
                            {" - Select Day - ", ""},
                            {"Sunday", "Sunday"},
                            {"Monday", "Monday"},
                            {"Tuesday", "Tuesday"},
                            {"Wednesday", "Wednesday"},
                            {"Thursday", "Thursday"},
                            {"Friday", "Friday"},                            
                            {"Saturday", "Saturday"}                            
                        };
                        var daysOfWeek = new SelectList(weekList, "Value", "Key");
                    
                            }
                            @Html.DropDownListFor(m => m.WeekendDayStart, daysOfWeek)
                            @Html.TextBoxFor(m => m.PickedUp, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                            <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                            @Html.ValidationMessageFor(m => m.PickedUp)
                            @Html.ValidationMessageFor(m => m.WeekendDayStart)
                        </div>
                        <div class="control-group">
                            <label class="form-question">
                                Where will the child(ren) be picked up?</label>
                            <label>
                                In the box below, finish the following sentence: The child(ren) will be picked up...</label>
                            @Html.TextBoxFor(m => m.PickupLocation, new { placeholder = "Location", @class = "input-xxlarge" })
                            @Html.ValidationMessageFor(m => m.PickupLocation)
                        </div>
                        <div class="control-group">
                            <label class="form-question">
                                What day and time will the child(ren) be dropped off on weekends?</label>
                            @Html.DropDownListFor(m => m.WeekendDayEnd, daysOfWeek)
                            @Html.TextBoxFor(m => m.DroppedOff, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                            <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                            @Html.ValidationMessageFor(m => m.DroppedOff)
                            @Html.ValidationMessageFor(m => m.WeekendDayEnd)
                        </div>
                        <div class="control-group">
                            <label class="form-question">
                                Where will the child(ren) be dropped off?</label>
                            <label>
                                In the box below, finish the following sentence: The child(ren) will be dropped off...</label>
                            @Html.TextBoxFor(m => m.DropOffLocation, new { placeholder = "Location", @class = "input-xxlarge" })
                            @Html.ValidationMessageFor(m => m.DropOffLocation)
                        </div>
                        <div class="control-group row-fluid">
                            <label class="form-question">
                                On what weekends during the month would the <span class="nonCustodial">@Model.NonCustodialParent</span> prefer to parent your child(ren)?</label>
                            <div class="span4">
                                <label class="form-question"><span class="nonCustodial">@Model.NonCustodialParent</span></label>
                                <label class="radio">Every other weekend @Html.RadioButtonFor(m => m.NonCustodianWeekend, (int)ParentWeekends.EveryOther)</label>
                                <label class="radio">1st and 3rd weekend @Html.RadioButtonFor(m => m.NonCustodianWeekend, (int)ParentWeekends.FirstThird)</label>
                                <label class="radio">1st, 3rd and 5th weekend @Html.RadioButtonFor(m => m.NonCustodianWeekend, (int)ParentWeekends.FirstThirdFifth)</label>
                                <label class="radio">2nd and 4th weekend @Html.RadioButtonFor(m => m.NonCustodianWeekend, (int)ParentWeekends.SecondFourth)</label>
                                <label class="radio">Other @Html.RadioButtonFor(m => m.NonCustodianWeekend, (int)ParentWeekends.Other)</label>
                                @if (Model.NonCustodianWeekend == ((int)ParentWeekends.Other))
                                {
                                    <div class="schedule-weekend-other">
                                        @Html.TextBoxFor(m => m.NonCustodianWeekendOther, new { placeholder = "Description" })
                                        @Html.ValidationMessageFor(m => m.NonCustodianWeekendOther)
                                    </div>
                                }
                                else
                                {
                                    <div class="hide schedule-weekend-other">
                                        @Html.TextBoxFor(m => m.NonCustodianWeekendOther, new { placeholder = "Description" })
                                        @Html.ValidationMessageFor(m => m.NonCustodianWeekendOther)
                                    </div>                                    
                                }
                            </div>
                            @Html.ValidationMessageFor(m => m.NonCustodianWeekend)<div class="span4">
                                <label class="form-question">@Model.CustodialParent</label>
                                <label class="radio">Every other weekend @Html.RadioButtonFor(m => m.CustodianWeekend, (int)ParentWeekends.EveryOther)</label>
                                <label class="radio">1st and 3rd weekend @Html.RadioButtonFor(m => m.CustodianWeekend, (int)ParentWeekends.FirstThird)</label>
                                <label class="radio">1st, 3rd and 5th weekend @Html.RadioButtonFor(m => m.CustodianWeekend, (int)ParentWeekends.FirstThirdFifth)</label>
                                <label class="radio">2nd and 4th weekend @Html.RadioButtonFor(m => m.CustodianWeekend, (int)ParentWeekends.SecondFourth)</label>
                                <label class="radio">Other @Html.RadioButtonFor(m => m.CustodianWeekend, (int)ParentWeekends.Other)</label>
                                @if (Model.CustodianWeekend == ((int)ParentWeekends.Other))
                                {
                                    <div class="schedule-weekend-other">
                                        @Html.TextBoxFor(m => m.CustodianWeekendOther, new { placeholder = "Description" })
                                        @Html.ValidationMessageFor(m => m.CustodianWeekendOther)
                                    </div>
                                }
                                else
                                {
                                    <div class="schedule-weekend-other hide">
                                        @Html.TextBoxFor(m => m.CustodianWeekendOther, new { placeholder = "Description" })
                                        @Html.ValidationMessageFor(m => m.CustodianWeekendOther)
                                    </div>                                    
                                }
                                @Html.ValidationMessageFor(m => m.CustodianWeekend)
                            </div>
                        </div>
                        <h4>Weekday Visitation</h4>
                        <div class="control-group">
                            <label class="form-question">
                                Will the <span class="nonCustodial">@Model.NonCustodialParent</span> spend time with the child(ren) during weekdays?</label>
                            <label class="radio">Yes @Html.RadioButtonFor(m => m.Weekdays, (int)YesNo.Yes)</label>
                            <label class="radio">No @Html.RadioButtonFor(m => m.Weekdays, (int)YesNo.No)</label>
                            @Html.ValidationMessageFor(m => m.Weekdays)
                        </div>
                        @if (Model.Weekdays == (int)YesNo.Yes)
                        {
                            <div class="schedule-weekday">
                                <label class="form-question schedule-weekday">
                                    As the <span class="nonCustodial">@Model.NonCustodialParent</span>, when would you like to have your regular parenting time with the child(ren) on weekdays?</label>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        What time will the child(ren) be picked up on weekdays?</label>
                                    @Html.TextBoxFor(m => m.WeekdayPickup, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                                    <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                                    @Html.ValidationMessageFor(m => m.WeekdayPickup)
                                </div>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        Where will the child(ren) be picked up?</label>
                                    <label>
                                        In the box below, finish the following sentence: The child(ren) will be picked up...</label>
                                    @Html.TextBoxFor(m => m.WeekdayPickupLocation, new { placeholder = "Location", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.WeekdayPickupLocation)
                                </div>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        What time will the child(ren) be dropped off on weekdays?</label>
                                    @Html.TextBoxFor(m => m.WeekdayDropoff, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                                    <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                                    @Html.ValidationMessageFor(m => m.WeekdayDropoff)
                                </div>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        Where will the child(ren) be dropped off?</label>
                                    <label>
                                        In the box below, finish the following sentence: The child(ren) will be dropped off...</label>
                                    @Html.TextBoxFor(m => m.WeekdayDropoffLocation, new { placeholder = "Location", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.WeekdayDropoffLocation)
                                </div>
                                <div class="control-group row-fluid schedule-weekday">
                                    <label class="form-question">
                                        On what weekdays will the <span class="nonCustodial">@Model.NonCustodialParent</span> excercise parenting/visitation of your child(ren)?</label>
                                    <div class="span8">
                                        @{
                                            var mondayChecked = Model.MondayParent ? "checked=checked" : "";
                                            var tuesdayChecked = Model.TuesdayParent ? "checked=checked" : "";
                                            var wednesdayChecked = Model.WednesdayParent ? "checked=checked" : "";
                                            var thursdayChecked = Model.ThursdayParent ? "checked=checked" : "";
                                            var fridayChecked = Model.FridayParent ? "checked=checked" : "";
                                            var saturdayChecked = Model.SaturdayParent ? "checked=checked" : "";
                                            var sundayChecked = Model.SundayParent ? "checked=checked" : "";
                                        }                                        
                                        <label class="checkbox inline ">
                                            Monday
                                            <input class="inline valid" data-val="true" id="MondayParent" name="MondayParent" type="checkbox" value="@Model.MondayParent.ToString()" @mondayChecked></label>
                                        <label class="checkbox inline ">
                                            Tuesday
                                            <input class="inline valid" data-val="true" id="TuesdayParent" name="TuesdayParent" type="checkbox" value="@Model.TuesdayParent.ToString()" @tuesdayChecked></label>
                                        <label class="checkbox inline ">
                                            Wednesday
                                            <input class="inline valid" data-val="true" id="WednesdayParent" name="WednesdayParent" type="checkbox" value="@Model.WednesdayParent.ToString()" @wednesdayChecked></label>
                                        <label class="checkbox inline ">
                                            Thursday
                                            <input class="inline valid" data-val="true" id="ThursdayParent" name="ThursdayParent" type="checkbox" value="@Model.ThursdayParent.ToString()" @thursdayChecked></label>
                                        <label class="checkbox inline ">
                                            Friday
                                            <input class="inline valid" data-val="true" id="FridayParent" name="FridayParent" type="checkbox" value="@Model.FridayParent.ToString()" @fridayChecked></label>
                                        <label class="checkbox inline ">
                                            Saturday
                                            <input class="inline valid" data-val="true" id="SaturdayParent" name="SaturdayParent" type="checkbox" value="@Model.SaturdayParent.ToString()" @saturdayChecked></label>
                                        <label class="checkbox inline ">
                                            Sunday
                                            <input class="inline valid" data-val="true" id="SundayParent" name="SundayParent" type="checkbox" value="@Model.SundayParent.ToString()" @sundayChecked></label>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.MondayParent)
                                    @Html.ValidationMessageFor(m => m.TuesdayParent)
                                    @Html.ValidationMessageFor(m => m.WednesdayParent)
                                    @Html.ValidationMessageFor(m => m.ThursdayParent)
                                    @Html.ValidationMessageFor(m => m.FridayParent)
                                    @Html.ValidationMessageFor(m => m.SaturdayParent)
                                    @Html.ValidationMessageFor(m => m.SundayParent)
                                </div>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        In addition to the above weekday visitation with regard to the child(ren), are there any additional provisions which will apply?</label>
                                    @Html.TextAreaFor(m => m.AdditionalProvisions, new { placeholder = "List Provisions Here", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.AdditionalProvisions)
                                </div>
                            </div>                                                
                        }
                        else
                        {
                            <div class="schedule-weekday hide">
                                <label class="form-question schedule-weekday hide">
                                    As the <span class="nonCustodial">@Model.NonCustodialParent</span>, when would you like to have your regular parenting time with the child(ren) on weekdays?</label>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        What time will the child(ren) be picked up on weekdays?</label>
                                    @Html.TextBoxFor(m => m.WeekdayPickup, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                                    <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                                    @Html.ValidationMessageFor(m => m.WeekdayPickup)
                                </div>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        Where will the child(ren) be picked up?</label>
                                    <label>
                                        In the box below, finish the following sentence: The child(ren) will be picked up...</label>
                                    @Html.TextBoxFor(m => m.WeekdayPickupLocation, new { placeholder = "Location", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.WeekdayPickupLocation)
                                </div>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        What time will the child(ren) be dropped off on weekdays?</label>
                                    @Html.TextBoxFor(m => m.WeekdayDropoff, new { placeholder = "hh:mm am/pm", @class = "timepicker input-small" })
                                    <i class="icon-time" style="margin: -2px 0 0 -22.5px; pointer-events: none; position: relative;"></i>
                                    @Html.ValidationMessageFor(m => m.WeekdayDropoff)
                                </div>
                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        Where will the child(ren) be dropped off?</label>
                                    <label>
                                        In the box below, finish the following sentence: The child(ren) will be dropped off...</label>
                                    @Html.TextBoxFor(m => m.WeekdayDropoffLocation, new { placeholder = "Location", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.WeekdayDropoffLocation)
                                </div>
                                <div class="control-group row-fluid schedule-weekday">
                                    <label class="form-question">
                                        On what weekdays will the <span class="nonCustodial">@Model.NonCustodialParent</span> excercise parenting/visitation of your child(ren)?</label>
                                    <div class="span8">
                                        @{
                                            var mondayChecked = Model.MondayParent ? "checked=checked" : "";
                                            var tuesdayChecked = Model.TuesdayParent ? "checked=checked" : "";
                                            var wednesdayChecked = Model.WednesdayParent ? "checked=checked" : "";
                                            var thursdayChecked = Model.ThursdayParent ? "checked=checked" : "";
                                            var fridayChecked = Model.FridayParent ? "checked=checked" : "";
                                            var saturdayChecked = Model.SaturdayParent ? "checked=checked" : "";
                                            var sundayChecked = Model.SundayParent ? "checked=checked" : "";
                                        }                                        
                                        <label class="checkbox inline ">
                                            Monday
                                            <input class="inline valid" data-val="true" id="MondayParent" name="MondayParent" type="checkbox" value="@Model.MondayParent.ToString()" @mondayChecked></label>
                                        <label class="checkbox inline ">
                                            Tuesday
                                            <input class="inline valid" data-val="true" id="TuesdayParent" name="TuesdayParent" type="checkbox" value="@Model.TuesdayParent.ToString()" @tuesdayChecked></label>
                                        <label class="checkbox inline ">
                                            Wednesday
                                            <input class="inline valid" data-val="true" id="WednesdayParent" name="WednesdayParent" type="checkbox" value="@Model.WednesdayParent.ToString()" @wednesdayChecked></label>
                                        <label class="checkbox inline ">
                                            Thursday
                                            <input class="inline valid" data-val="true" id="ThursdayParent" name="ThursdayParent" type="checkbox" value="@Model.ThursdayParent.ToString()" @thursdayChecked></label>
                                        <label class="checkbox inline ">
                                            Friday
                                            <input class="inline valid" data-val="true" id="FridayParent" name="FridayParent" type="checkbox" value="@Model.FridayParent.ToString()" @fridayChecked></label>
                                        <label class="checkbox inline ">
                                            Saturday
                                            <input class="inline valid" data-val="true" id="SaturdayParent" name="SaturdayParent" type="checkbox" value="@Model.SaturdayParent.ToString()" @saturdayChecked></label>
                                        <label class="checkbox inline ">
                                            Sunday
                                            <input class="inline valid" data-val="true" id="SundayParent" name="SundayParent" type="checkbox" value="@Model.SundayParent.ToString()" @sundayChecked></label>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.MondayParent)
                                    @Html.ValidationMessageFor(m => m.TuesdayParent)
                                    @Html.ValidationMessageFor(m => m.WednesdayParent)
                                    @Html.ValidationMessageFor(m => m.ThursdayParent)
                                    @Html.ValidationMessageFor(m => m.FridayParent)
                                    @Html.ValidationMessageFor(m => m.SaturdayParent)
                                    @Html.ValidationMessageFor(m => m.SundayParent)
                                </div>                                <div class="control-group schedule-weekday">
                                    <label class="form-question">
                                        In addition to the above weekday visitation with regard to the children, are there any additional provisions which will apply?</label>
                                    @Html.TextAreaFor(m => m.AdditionalProvisions, new { placeholder = "List Provisions Here", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.AdditionalProvisions)
                                </div>
                            </div>                        
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    <button class="btn btn-primary child-part9 next" value="Continue">Continue <i class="icon-arrow-right icon-white"></i></button>
</div>
