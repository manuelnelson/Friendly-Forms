@using Models.ViewModels
@model IncomeViewModel
<div class="form-vertical wrapper hide" id="incomeOtherWrapper">
    @using (Html.BeginForm("Parenting", "Forms", FormMethod.Post, new { id = "incomeOther" }))
    {
        <input type="hidden" id="incomeOtherId" value="@Model.Id"/>
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"><i class="icon-signal"></i></span>
                        <h5>Income</h5>
                    </div>
                    <div class="widget-content">
                        <label class="informative">You must answer the income questions below as they apply to the mother and/or father. Refer to the last question for a list of 'other sources of income', including a place to enter Imputed Income.</label>
                        <div class="control-group row-fluid">
                            <label class="span4 form-question">
                                Does the father currently have any income, whether from a salary, self-employment, investments, benefits or any other source?</label>
                            <label class="radio inline">Yes @Html.RadioButtonFor(m => m.HaveSalary, (int)YesNo.Yes, new { @class = "inline" })</label>
                            <label class="radio inline">No @Html.RadioButtonFor(m => m.HaveSalary, (int)YesNo.No, new { @class = "inline" })</label>
                            @Html.ValidationMessageFor(m => m.HaveSalary)
                        </div>
                        @if (Model.HaveSalary == ((int)YesNo.No))
                        {
                            <div class="income-salary">
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        Where one parent states they have no income, the court will typically apply 
                                    “imputed income” to that parent; that is, income equal to the salary one 
                                    would receive if they were employed at minimum wage in a full time job. In 
                                    your county, that amount equals $1,248 per month in gross wages. This 
                                    amount will be applied in your case. (Do not include means-tested public 
                                    assistance.)</label>
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        Explain the basis for Other Income, including Imputed Income.</label>
                                    @Html.TextAreaFor(m => m.OtherIncome, new { placeholder = "Other Income" })
                                    @Html.ValidationMessageFor(m => m.OtherIncome)
                                </div>
                            </div>  
                            <div class="income-nosalary hide">
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        What is your income for which you received a W-2 tax form for your job?</label>
                                    @Html.TextBoxFor(m => m.W2Income, new { placeholder = "Annual Income" })
                                    @Html.ValidationMessageFor(m => m.W2Income)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        Do you have documented income for which you did not receive a W-2 Form at years end (eg contract or freelance work for which you receive a 1099 or 1099-R)</label>
                                    <label class="radio inline">Yes @Html.RadioButtonFor(m => m.NonW2Income, (int)YesNo.Yes, new { @class = "inline" })</label>
                                    <label class="radio inline">No @Html.RadioButtonFor(m => m.NonW2Income, (int)YesNo.No, new { @class = "inline" })</label>
                                    @Html.ValidationMessageFor(m => m.NonW2Income)
                                </div>
                                @if (Model.NonW2Income == ((int)YesNo.Yes))
                                {
                                    <div class="income-nonW2">
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncome, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncome)
                                        </div>
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were NOT deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncomeNoDeductions, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncomeNoDeductions)
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="income-nonW2 hide">
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncome, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncome)
                                        </div>
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were NOT deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncomeNoDeductions, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncomeNoDeductions)
                                        </div>
                                    </div>
                                }
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Commissions, Fees, Tips</label>
                                    @Html.TextBoxFor(m => m.Commisions, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Commisions)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Bonuses</label>
                                    @Html.TextBoxFor(m => m.Bonuses, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Bonuses)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Overtime Payments</label>
                                    @Html.TextBoxFor(m => m.Overtime, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Overtime)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Severance Pay</label>
                                    @Html.TextBoxFor(m => m.Severance, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Severance)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Recurring Income from Pensions or Retirement Plans</label>
                                    @Html.TextBoxFor(m => m.Retirement, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Retirement)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Interest Income</label>
                                    @Html.TextBoxFor(m => m.Interest, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Interest)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Income from Dividends</label>
                                    @Html.TextBoxFor(m => m.Dividends, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Dividends)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Trust Income</label>
                                    @Html.TextBoxFor(m => m.Trust, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Trust)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Income from Annuities</label>
                                    @Html.TextBoxFor(m => m.Annuities, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Annuities)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Capital Gains</label>
                                    @Html.TextBoxFor(m => m.Capital, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Capital)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Social Security Disability or Retirement Benefits</label>
                                    @Html.TextBoxFor(m => m.SocialSecurity, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.SocialSecurity)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Worker's Compensation Benefits</label>
                                    @Html.TextBoxFor(m => m.Compensation, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Compensation)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Unemployment Benefits</label>
                                    @Html.TextBoxFor(m => m.Unemployment, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Unemployment)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Judgments from Personal Injury or Other Civil Cases</label>
                                    @Html.TextBoxFor(m => m.CivilCase, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.CivilCase)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Gifts (cash or other gifts that can be converted to cash)</label>
                                    @Html.TextBoxFor(m => m.Gifts, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Gifts)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Prizes/Lottery Winnings</label>
                                    @Html.TextBoxFor(m => m.Prizes, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Prizes)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Alimony & maintenance from persons not in this case</label>
                                    @Html.TextBoxFor(m => m.Alimony, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Alimony)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Assets which are used for support of family</label>
                                    @Html.TextBoxFor(m => m.Assets, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Assets)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Fringe Benefits (if significantly reduce living expenses)</label>
                                    @Html.TextBoxFor(m => m.Fringe, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Fringe)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Any Other Income, including Imputed Income (Do not include means-tested public assistance, such as TANF or food stamps.)</label>
                                    @Html.TextBoxFor(m => m.Other, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Other)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Please explain the basis for Imputed Income as entered above.</label>
                                    @Html.TextAreaFor(m => m.OtherDetails, new { placeholder = "Details", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.OtherDetails)
                                </div>
                            </div> 
                        }
                        else
                        {
                            <div class="income-salary hide">
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        Where one parent states they have no income, the court will typically apply 
                                    “imputed income” to that parent; that is, income equal to the salary one 
                                    would receive if they were employed at minimum wage in a full time job. In 
                                    your county, that amount equals $1,248 per month in gross wages. This 
                                    amount will be applied in your case. (Do not include means-tested public 
                                    assistance.)</label>
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        Explain the basis for Other Income, including Imputed Income.</label>
                                    @Html.TextAreaFor(m => m.OtherIncome, new { placeholder = "Other Income" })
                                    @Html.ValidationMessageFor(m => m.OtherIncome)
                                </div>
                            </div>   
                            <div class="income-nosalary">
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        What is your income for which you received a W-2 tax form for your job?</label>
                                    @Html.TextBoxFor(m => m.W2Income, new { placeholder = "Annual Income" })
                                    @Html.ValidationMessageFor(m => m.W2Income)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">
                                        Do you have documented income for which you did not receive a W-2 Form at years end (eg contract or freelance work for which you receive a 1099 or 1099-R)</label>
                                    <label class="radio inline">Yes @Html.RadioButtonFor(m => m.NonW2Income, (int)YesNo.Yes, new { @class = "inline" })</label>
                                    <label class="radio inline">No @Html.RadioButtonFor(m => m.NonW2Income, (int)YesNo.No, new { @class = "inline" })</label>
                                    @Html.ValidationMessageFor(m => m.NonW2Income)
                                </div>
                                @if (Model.NonW2Income == ((int)YesNo.Yes))
                                {
                                    <div class="income-nonW2">
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncome, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncome)
                                        </div>
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were NOT deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncomeNoDeductions, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncomeNoDeductions)
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="income-nonW2 hide">
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncome, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncome)
                                        </div>
                                        <div class="control-group row-fluid">
                                            <label class="span4 form-question">Annual self-employment income in which self-employment taxes for FICA and Medicare were NOT deducted.</label>
                                            @Html.TextBoxFor(m => m.SelfIncomeNoDeductions, new { placeholder = "Annual Amount" })
                                            @Html.ValidationMessageFor(m => m.SelfIncomeNoDeductions)
                                        </div>
                                    </div>
                                }
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Commissions, Fees, Tips</label>
                                    @Html.TextBoxFor(m => m.Commisions, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Commisions)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Bonuses</label>
                                    @Html.TextBoxFor(m => m.Bonuses, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Bonuses)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Overtime Payments</label>
                                    @Html.TextBoxFor(m => m.Overtime, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Overtime)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Severance Pay</label>
                                    @Html.TextBoxFor(m => m.Severance, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Severance)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Recurring Income from Pensions or Retirement Plans</label>
                                    @Html.TextBoxFor(m => m.Retirement, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Retirement)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Interest Income</label>
                                    @Html.TextBoxFor(m => m.Interest, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Interest)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Income from Dividends</label>
                                    @Html.TextBoxFor(m => m.Dividends, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Dividends)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Trust Income</label>
                                    @Html.TextBoxFor(m => m.Trust, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Trust)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Income from Annuities</label>
                                    @Html.TextBoxFor(m => m.Annuities, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Annuities)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Capital Gains</label>
                                    @Html.TextBoxFor(m => m.Capital, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Capital)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Social Security Disability or Retirement Benefits</label>
                                    @Html.TextBoxFor(m => m.SocialSecurity, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.SocialSecurity)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Worker's Compensation Benefits</label>
                                    @Html.TextBoxFor(m => m.Compensation, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Compensation)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Unemployment Benefits</label>
                                    @Html.TextBoxFor(m => m.Unemployment, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Unemployment)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Judgments from Personal Injury or Other Civil Cases</label>
                                    @Html.TextBoxFor(m => m.CivilCase, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.CivilCase)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Gifts (cash or other gifts that can be converted to cash)</label>
                                    @Html.TextBoxFor(m => m.Gifts, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Gifts)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Prizes/Lottery Winnings</label>
                                    @Html.TextBoxFor(m => m.Prizes, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Prizes)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Alimony & maintenance from persons not in this case</label>
                                    @Html.TextBoxFor(m => m.Alimony, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Alimony)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Assets which are used for support of family</label>
                                    @Html.TextBoxFor(m => m.Assets, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Assets)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Fringe Benefits (if significantly reduce living expenses)</label>
                                    @Html.TextBoxFor(m => m.Fringe, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Fringe)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Any Other Income, including Imputed Income (Do not include means-tested public assistance, such as TANF or food stamps.)</label>
                                    @Html.TextBoxFor(m => m.Other, new { placeholder = "Annual Amount" })
                                    @Html.ValidationMessageFor(m => m.Other)
                                </div>
                                <div class="control-group row-fluid">
                                    <label class="span4 form-question">Please explain the basis for Imputed Income as entered above.</label>
                                    @Html.TextAreaFor(m => m.OtherDetails, new { placeholder = "Details", @class = "input-xxlarge" })
                                    @Html.ValidationMessageFor(m => m.OtherDetails)
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    <button class="btn btn-primary financial-part6 next">Continue <i class="icon-arrow-right icon-white"></i></button>
</div>

