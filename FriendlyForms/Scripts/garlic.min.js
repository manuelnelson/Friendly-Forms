!function(a){"use strict";var b=function(a){this.defined="undefined"!=typeof localStorage};b.prototype={constructor:b,get:function(a,b){return localStorage.getItem(a)?localStorage.getItem(a):"undefined"!=typeof b?b:null},has:function(a){return localStorage.getItem(a)?!0:!1},set:function(a,b,c){return"string"==typeof b&&(""===b?this.destroy(a):localStorage.setItem(a,b)),"function"==typeof c?c():!0},destroy:function(a,b){return localStorage.removeItem(a),"function"==typeof b?b():!0},clean:function(a){for(var b=localStorage.length-1;b>=0;b--)"undefined"==typeof Array.indexOf&&-1!==localStorage.key(b).indexOf("garlic:")&&localStorage.removeItem(localStorage.key(b));return"function"==typeof a?a():!0},clear:function(a){return localStorage.clear(),"function"==typeof a?a():!0}};var c=function(a,b,c){this.init("garlic",a,b,c)};c.prototype={constructor:c,init:function(b,c,d,e){this.type=b,this.$element=a(c),this.options=this.getOptions(e),this.storage=d,this.path=this.options.getPath(this.$element)||this.getPath(),this.parentForm=this.$element.closest("form"),this.$element.addClass("garlic-auto-save"),this.expiresFlag=this.options.expires?(this.$element.data("expires")?this.path:this.getPath(this.parentForm))+"_flag":!1,this.$element.on(this.options.events.join("."+this.type+" "),!1,a.proxy(this.persist,this)),this.options.destroy&&a(this.parentForm).on("submit reset",!1,a.proxy(this.destroy,this)),this.retrieve()},getOptions:function(b){return a.extend({},a.fn[this.type].defaults,b,this.$element.data())},persist:function(){if(this.val===this.$element.val())return;this.val=this.$element.val(),this.options.expires&&this.storage.set(this.expiresFlag,((new Date).getTime()+this.options.expires*1e3).toString());if(this.$element.is("input[type=checkbox]"))return this.storage.set(this.path,this.$element.attr("checked")?"checked":"unchecked");this.storage.set(this.path,this.$element.val())},retrieve:function(){if(this.storage.has(this.path)){if(this.options.expires){var a=(new Date).getTime();if(this.storage.get(this.expiresFlag)<a.toString()){this.storage.destroy(this.path);return}this.$element.attr("expires-in",Math.floor((parseInt(this.storage.get(this.expiresFlag))-a)/1e3))}var b=this.storage.get(this.path);if(this.options.conflictManager.enabled&&this.detectConflict())return this.conflictManager();if(this.$element.is("input[type=radio], input[type=checkbox]")){if("checked"===b||this.$element.val()===b)return this.$element.attr("checked",!0);"unchecked"===b&&this.$element.attr("checked",!1);return}this.$element.val(b),this.options.onRetrieve(this.$element,b);return}},detectConflict:function(){var b=this;if(this.$element.is("input[type=checkbox], input[type=radio]"))return!1;if(this.$element.val()&&this.storage.get(this.path)!==this.$element.val()){if(this.$element.is("select")){var c=!1;return this.$element.find("option").each(function(){if(a(this).index()!==0&&a(this).attr("selected")&&a(this).val()!==b.storage.get(this.path)){c=!0;return}}),c}return!0}return!1},conflictManager:function(){if("function"==typeof this.options.conflictManager.onConflictDetected&&!this.options.conflictManager.onConflictDetected(this.$element,this.storage.get(this.path)))return!1;this.options.conflictManager.garlicPriority?(this.$element.data("swap-data",this.$element.val()),this.$element.data("swap-state","garlic"),this.$element.val(this.storage.get(this.path))):(this.$element.data("swap-data",this.storage.get(this.path)),this.$element.data("swap-state","default")),this.swapHandler(),this.$element.addClass("garlic-conflict-detected"),this.$element.closest("input[type=submit]").attr("disabled",!0)},swapHandler:function(){var b=a(this.options.conflictManager.template);this.$element.after(b.text(this.options.conflictManager.message)),b.on("click",!1,a.proxy(this.swap,this))},swap:function(){var b=this.$element.data("swap-data");this.$element.data("swap-state","garlic"===this.$element.data("swap-state")?"default":"garlic"),this.$element.data("swap-data",this.$element.val()),a(this.$element).val(b)},destroy:function(){this.storage.destroy(this.path)},remove:function(){this.remove();if(this.$element.is("input[type=radio], input[type=checkbox]")){a(this.$element).attr("checked",!1);return}this.$element.val("")},getPath:function(b){"undefined"==typeof b&&(b=this.$element);if(this.options.getPath(b))return this.options.getPath(b);if(b.length!=1)return!1;var c="",d=b.is("input[type=checkbox]"),e=b;while(e.length){var f=e[0],g=f.nodeName;if(!g)break;g=g.toLowerCase();var h=e.parent(),i=h.children(g);if(!a(f).is("form, input, select, textarea")&&!d){e=h;continue}g+=a(f).attr("name")?"."+a(f).attr("name"):"",i.length>1&&!a(f).is("input[type=radio]")&&(g+=":eq("+i.index(f)+")"),c=g+(c?">"+c:"");if("form"==f.nodeName.toLowerCase())break;e=h}return"garlic:"+document.domain+(this.options.domain?"*":window.location.pathname)+">"+c},getStorage:function(){return this.storage}},a.fn.garlic=function(d,e){function i(b){var e=a(b),h=e.data("garlic"),i=a.extend({},f,e.data());if("undefined"!=typeof i.storage&&!i.storage)return;if("password"===a(b).attr("type"))return;h||e.data("garlic",h=new c(b,g,i));if("string"==typeof d&&"function"==typeof h[d])return h[d]()}var f=a.extend(!0,{},a.fn.garlic.defaults,d,this.data()),g=new b,h=!1;return g.defined?(this.each(function(){a(this).is("form")?a(this).find(f.inputs).each(function(){h=i(a(this))}):a(this).is(f.inputs)&&(h=i(a(this)))}),"function"==typeof e?e():h):!1},a.fn.garlic.Constructor=c,a.fn.garlic.defaults={destroy:!0,inputs:"input, textarea, select",events:["DOMAttrModified","textInput","input","change","keypress","paste","focus"],domain:!1,expires:!1,conflictManager:{enabled:!0,garlicPriority:!0,template:'<span class="garlic-swap"></span>',message:"This is your saved data. Click here to see default one",onConflictDetected:function(a,b){return!0}},getPath:function(a){},onRetrieve:function(a,b){}},a(window).on("load",function(){a('[data-persist="garlic"]').each(function(){a(this).garlic()})})}(window.jQuery||window.Zepto)